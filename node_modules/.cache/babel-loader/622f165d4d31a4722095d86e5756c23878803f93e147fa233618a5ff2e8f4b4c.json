{"ast":null,"code":"var _jsxFileName = \"/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx\";\nimport Dice from \"./components/Dice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  function generateAllNewDice() {\n    // const newDice = []\n    // for(let i = 0; i < 10; i++){\n    //     const randNum = Math.floor(Math.random() * 6)\n    //     newDice.push(randNum)\n    // }\n    // return newDice\n    return new Array(10).fill(0).map(index => /*#__PURE__*/_jsxDEV(Dice, {\n      value: Math.ceil(Math.random() * 6)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 53\n    }, this));\n  }\n\n  // const dice = generateAllNewDice().map((die, index)=>{\n  //     return  <Dice value={die} key={index}/>})\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: generateAllNewDice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Dice","jsxDEV","_jsxDEV","Fragment","_Fragment","App","generateAllNewDice","Array","fill","map","index","value","Math","ceil","random","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx"],"sourcesContent":["import Dice from \"./components/Dice\";\n\nexport default function App() {\n    \n    function generateAllNewDice(){\n        // const newDice = []\n        // for(let i = 0; i < 10; i++){\n        //     const randNum = Math.floor(Math.random() * 6)\n        //     newDice.push(randNum)\n        // }\n        // return newDice\n        return new Array(10).fill(0).map((index) => <Dice value = {Math.ceil(Math.random() * 6)}/>)\n    }\n\n    // const dice = generateAllNewDice().map((die, index)=>{\n    //     return  <Dice value={die} key={index}/>})\n\n  return (\n    <>\n      <main>\n        <div className=\"container\">\n            {generateAllNewDice()}\n        </div>\n      </main>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE1B,SAASC,kBAAkBA,CAAA,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,iBAAKR,OAAA,CAACF,IAAI;MAACW,KAAK,EAAIC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC;EAC/F;;EAEA;EACA;;EAEF,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAD,QAAA,EACrBb,kBAAkB,CAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP;AAACG,EAAA,GAxBuBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}