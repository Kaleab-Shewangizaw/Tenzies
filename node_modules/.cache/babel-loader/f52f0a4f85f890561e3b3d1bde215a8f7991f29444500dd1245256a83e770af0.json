{"ast":null,"code":"var _jsxFileName = \"/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx\",\n  _s = $RefreshSig$();\nimport Dice from \"./components/Dice\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  function generateAllNewDice() {\n    // const newDice = []\n    // for(let i = 0; i < 10; i++){\n    //     const randNum = Math.floor(Math.random() * 6)\n    //     newDice.push(randNum)\n    // }\n    // return newDice\n    // ----------------------------------------------------------------\n    // return new Array(10)\n    //   .fill(0)\n    //   .map((val, index) => (\n    //     <Dice value={Math.ceil(Math.random() * 6)} key={index} />\n    //   ));\n    return new Array(10).fill(0).map(() => Math.ceil(Math.random() * 6));\n  }\n  const [dice, setDice] = useState(generateAllNewDice());\n  const diceElement = dice.map((num, index) => /*#__PURE__*/_jsxDEV(Dice, {\n    value: num\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 48\n  }, this));\n\n  // const dice = generateAllNewDice().map((die, index)=>{\n  //     return  <Dice value={die} key={index}/>})\n\n  const rolldice = () => {\n    setDice();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: diceElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rolldice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"SIuNhzIcrFRnWzVQ3fwYp4mDMrQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Dice","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","generateAllNewDice","Array","fill","map","Math","ceil","random","dice","setDice","diceElement","num","index","value","fileName","_jsxFileName","lineNumber","columnNumber","rolldice","children","className","onClick","_c","$RefreshReg$"],"sources":["/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx"],"sourcesContent":["import Dice from \"./components/Dice\";\nimport { useState } from \"react\";\nexport default function App() {\n  function generateAllNewDice() {\n    // const newDice = []\n    // for(let i = 0; i < 10; i++){\n    //     const randNum = Math.floor(Math.random() * 6)\n    //     newDice.push(randNum)\n    // }\n    // return newDice\n    // ----------------------------------------------------------------\n    // return new Array(10)\n    //   .fill(0)\n    //   .map((val, index) => (\n    //     <Dice value={Math.ceil(Math.random() * 6)} key={index} />\n    //   ));\n    return new Array(10).fill(0).map(() => Math.ceil(Math.random() * 6))\n  }\n\n  const [dice, setDice] = useState(generateAllNewDice())\n\n  const diceElement = dice.map((num, index) => <Dice value = {num} key={index}/>)\n\n  // const dice = generateAllNewDice().map((die, index)=>{\n  //     return  <Dice value={die} key={index}/>})\n\n  const rolldice = () => {\n    setDice()\n  }\n\n  return (\n    <>\n      <main>\n        <div className=\"container\">{diceElement}</div>\n        <button onClick={rolldice}>Roll Dice</button>\n      </main>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,SAASC,kBAAkBA,CAAA,EAAG;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,MAAMC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACtE;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACO,kBAAkB,CAAC,CAAC,CAAC;EAEtD,MAAMS,WAAW,GAAGF,IAAI,CAACJ,GAAG,CAAC,CAACO,GAAG,EAAEC,KAAK,kBAAKhB,OAAA,CAACH,IAAI;IAACoB,KAAK,EAAIF;EAAI,GAAMC,KAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;;EAE/E;EACA;;EAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBT,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACEvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAET;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9CrB,OAAA;QAAQyB,OAAO,EAAEH,QAAS;QAAAC,QAAA,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACP,CAAC;AAEP;AAACjB,EAAA,CApCuBD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}