{"ast":null,"code":"var _jsxFileName = \"/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx\",\n  _s = $RefreshSig$();\nimport Dice from \"./components/Dice\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  function generateAllNewDice() {\n    return new Array(10).fill(0).map(() => ({\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    }));\n  }\n  const [dice, setDice] = useState(generateAllNewDice());\n  const diceElement = dice.map((num, index) => /*#__PURE__*/_jsxDEV(Dice, {\n    value: num.value,\n    isHeld: num.isHeld,\n    hold: () => hold(num.id)\n  }, num.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  const [gameWon, setGameWon] = useState(false);\n  if (dice.filter(die => die.isHeld).length === 10 && dice.every(die => die.value === dice[0].value)) {\n    console.log(\"game over\");\n    setGameWon(game);\n  }\n  const hold = id => {\n    setDice(dice.map(die => {\n      if (die.id === id) {\n        return {\n          ...die,\n          isHeld: !die.isHeld\n        };\n      } else {\n        return die;\n      }\n    }));\n  };\n  const rolldice = () => {\n    setDice(oldDice => oldDice.map(die => die.isHeld ? die : {\n      ...die,\n      value: Math.ceil(Math.random() * 6)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tenzies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: diceElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rolldice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"eLjTnylqOLg73nn4xu6qVQ6GjcM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Dice","useState","nanoid","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","generateAllNewDice","Array","fill","map","value","Math","ceil","random","isHeld","id","dice","setDice","diceElement","num","index","hold","fileName","_jsxFileName","lineNumber","columnNumber","gameWon","setGameWon","filter","die","length","every","console","log","game","rolldice","oldDice","children","className","onClick","_c","$RefreshReg$"],"sources":["/home/kalab/Documents/Documents/Scrimba-react/04/src/App.jsx"],"sourcesContent":["import Dice from \"./components/Dice\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nexport default function App() {\n  function generateAllNewDice() {\n\n    return new Array(10).fill(0).map(() => ({\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid(),\n    }));\n  }\n\n  const [dice, setDice] = useState(generateAllNewDice());\n\n  const diceElement = dice.map((num, index) => (\n    <Dice\n      value={num.value}\n      isHeld={num.isHeld}\n      key={num.id}\n      hold={() => hold(num.id)}\n    />\n  ));\n\n  const [gameWon, setGameWon] = useState(false)\n\nif (dice.filter((die) => die.isHeld).length === 10 && dice.every(die => die.value === dice[0].value)) {\n    console.log(\"game over\");\n    setGameWon(game)\n  }\n  const hold = (id) => {\n    setDice(\n      dice.map((die) => {\n        if (die.id === id) {\n          return { ...die, isHeld: !die.isHeld };\n        } else {\n          return die;\n        }\n      })\n    );\n  };\n\n  const rolldice = () => {\n    setDice((oldDice) =>\n      oldDice.map((die) =>\n        die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n      )\n    );\n  };\n\n  return (\n    <>\n      <main>\n        <h1>Tenzies</h1>\n        <div className=\"container\">{diceElement}</div>\n\n        <button onClick={rolldice}>Roll Dice</button>\n      </main>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}